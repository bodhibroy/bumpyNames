DROP TABLE IF EXISTS players CASCADE;
DROP TABLE IF EXISTS gropes CASCADE;
    
CREATE TABLE players
(
  ip inet NOT NULL,
  name character(20),
  sex character(10),
  race character(20),
  class character(20),
  location_x integer,
  location_y integer,
  burns integer DEFAULT 0,
  CONSTRAINT ip PRIMARY KEY (ip)
);


CREATE TABLE gropes
(
  groper inet NOT NULL,
  gropee inet NOT NULL,
  count integer,
  CONSTRAINT groper_gropee PRIMARY KEY (groper, gropee),
  CONSTRAINT gropee FOREIGN KEY (gropee)
      REFERENCES players (ip) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT groper FOREIGN KEY (groper)
      REFERENCES players (ip) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);


INSERT INTO players
    VALUES ('127.0.0.1',
    'Big Bodhi',
    'Male',
    'Otter',
    'Chef',
    '0', '0',
    0);

INSERT INTO players
    VALUES ('10.0.0.1',
    'Chia Zhong Da, Zen',
    'Male',
    'Platypus',
    'XMM Herder',
    '8', '2',
    3);

INSERT INTO players
    VALUES ('10.0.0.101',
    'XMM1',
    'Female',
    'Orc',
    'XMM',
    '3', '3',
    1);

INSERT INTO players
    VALUES ('10.0.0.102',
    'XMM2',
    'Female',
    'Platypus',
    'XMM',
    '3', '4',
    0);

INSERT INTO players
    VALUES ('10.0.0.103',
    'XMM3',
    'Female',
    'Orc',
    'XMM',
    '5', '3',
    7);

INSERT INTO gropes VALUES ('127.0.0.1', '10.0.0.1', 2);
INSERT INTO gropes VALUES ('10.0.0.1', '127.0.0.1', 3);
INSERT INTO gropes VALUES ('10.0.0.101', '127.0.0.1', 4);
INSERT INTO gropes VALUES ('10.0.0.101', '10.0.0.103', 1);
INSERT INTO gropes VALUES ('10.0.0.102', '127.0.0.1', 2);
INSERT INTO gropes VALUES ('10.0.0.103', '127.0.0.1', 3);
INSERT INTO gropes VALUES ('10.0.0.103', '10.0.0.101', 1);
INSERT INTO gropes VALUES ('10.0.0.1', '10.0.0.102', 2);

SELECT * from players;
SELECT * from gropes;


CREATE OR REPLACE VIEW groper_grope_counts_ AS
    SELECT gropes.groper AS groper_ip, SUM(gropes.count) AS grope_count
        FROM gropes
        JOIN players ON (gropes.groper = players.ip)
        GROUP BY gropes.groper;


CREATE OR REPLACE VIEW gropee_grope_counts_ AS
    SELECT gropes.gropee AS gropee_ip, SUM(gropes.count) AS grope_count
        FROM gropes
        JOIN players ON (gropes.gropee = players.ip)
        GROUP BY gropes.gropee;


CREATE OR REPLACE VIEW groper_grope_counts AS
    SELECT players.name AS name, gropes_base.groper_ip AS ip, gropes_base.grope_count AS grope_count, players.sex AS sex, players.race AS race, players.class AS class
        FROM groper_grope_counts_ AS gropes_base
        INNER JOIN players ON (gropes_base.groper_ip = players.ip);

-- SELECT * FROM groper_grope_counts;


CREATE OR REPLACE VIEW gropee_grope_counts AS
    SELECT players.name AS name, gropes_base.gropee_ip AS ip, gropes_base.grope_count AS grope_count, players.sex AS sex, players.race AS race, players.class AS class
        FROM gropee_grope_counts_ AS gropes_base
        INNER JOIN players ON (gropes_base.gropee_ip = players.ip);
        
-- SELECT * FROM gropee_grope_counts;


CREATE OR REPLACE VIEW top_groper_grope_counts AS
    SELECT * FROM groper_grope_counts
        ORDER BY grope_count DESC, name
        LIMIT 5;


CREATE OR REPLACE VIEW top_gropee_grope_counts AS
    SELECT * FROM gropee_grope_counts
        ORDER BY grope_count DESC, name
        LIMIT 5;
        

CREATE OR REPLACE VIEW least_gropey_grope_counts AS
    SELECT * FROM groper_grope_counts
        ORDER BY grope_count
        LIMIT 10;


CREATE OR REPLACE VIEW least_groped_grope_counts AS
    SELECT * FROM gropee_grope_counts
        ORDER BY grope_count DESC
        LIMIT 10;
        

CREATE OR REPLACE VIEW grope_pairs AS
    SELECT players1.name AS groper, players2.name AS gropee, gropes.count AS grope_count
        FROM gropes
        INNER JOIN players AS players1 ON (gropes.groper = players1.ip)
        INNER JOIN players AS players2 ON (gropes.gropee = players2.ip);
        

-- Top Grope Pairs
SELECT * FROM grope_pairs ORDER BY grope_count DESC LIMIT 10;


-- Top Grope Buddies
SELECT
        CASE WHEN gp1.groper < gp1.gropee THEN gp1.groper
            ELSE gp1.gropee
        END AS person_one,
        CASE WHEN gp1.groper < gp1.gropee THEN gp1.gropee
            ELSE gp1.groper
        END AS person_two,
        (COALESCE(gp1.grope_count,0)+COALESCE(gp2.grope_count,0)) AS gropes_exchanged,
        ABS(COALESCE(gp1.grope_count,0)-COALESCE(gp2.grope_count,0)) / (0.0 + COALESCE(gp1.grope_count,0)+COALESCE(gp2.grope_count,0)) AS asymmetry
    FROM grope_pairs AS gp1
    LEFT JOIN grope_pairs AS gp2
        ON (gp1.groper = gp2.gropee AND gp2.groper = gp1.gropee)
    WHERE (gp2.groper IS NULL OR gp1.groper < gp1.gropee)
    ORDER BY person_one, person_two
;


-- Top Gropers
SELECT * FROM top_groper_grope_counts;


-- Top Gropees
SELECT * FROM top_gropee_grope_counts;


-- Polite Society
SELECT * FROM least_gropey_grope_counts;


-- Sexual Predator Awareness Role Models
SELECT * FROM least_groped_grope_counts;


-- Star Crossed Pairs (Male Gropers)
SELECT players1.name as groper_name, players2.name as gropee_name
    FROM players AS players1
    JOIN players AS players2 ON (players1.ip != players2.ip AND players1.sex != players2.sex)
        LEFT JOIN gropes ON (players1.ip = gropes.groper AND players2.ip = gropes.gropee)
    WHERE players1.sex = 'Male' AND COALESCE(gropes.count,0) = 0
    ORDER BY groper_name, gropee_name;


-- Star Crossed Pairs (Female Gropers)
SELECT players1.name as groper_name, players2.name as gropee_name
    FROM players AS players1
    JOIN players AS players2 ON (players1.ip != players2.ip AND players1.sex != players2.sex)
        LEFT JOIN gropes ON (players1.ip = gropes.groper AND players2.ip = gropes.gropee)
    WHERE players1.sex = 'Female' AND COALESCE(gropes.count,0) = 0
    ORDER BY groper_name, gropee_name;


-- Average/Max/Min Groper Gropes by Sex
SELECT sex, SUM(grope_count), COUNT(grope_count), AVG(grope_count), MIN(grope_count), MAX(grope_count)
    FROM groper_grope_counts GROUP BY sex ORDER BY sex;


-- Average/Max/Min Groper Gropes by Race
SELECT race, SUM(grope_count), COUNT(grope_count), AVG(grope_count), MIN(grope_count), MAX(grope_count)
    FROM groper_grope_counts GROUP BY race ORDER BY race;


-- Average/Max/Min Groper Gropes by Class
SELECT class, SUM(grope_count), COUNT(grope_count), AVG(grope_count), MIN(grope_count), MAX(grope_count)
    FROM groper_grope_counts GROUP BY class ORDER BY class;


-- Average/Max/Min Gropee Gropes by Sex
SELECT sex, SUM(grope_count), COUNT(grope_count), AVG(grope_count), MIN(grope_count), MAX(grope_count)
    FROM gropee_grope_counts GROUP BY sex ORDER BY sex;


-- Average/Max/Min Gropee Gropes by Race
SELECT race, SUM(grope_count), COUNT(grope_count), AVG(grope_count), MIN(grope_count), MAX(grope_count)
    FROM gropee_grope_counts GROUP BY race ORDER BY race;


-- Average/Max/Min Gropee Gropes by Class
SELECT class, SUM(grope_count), COUNT(grope_count), AVG(grope_count), MIN(grope_count), MAX(grope_count)
    FROM gropee_grope_counts GROUP BY class ORDER BY class;

